plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.7'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.pn'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //Mybatis-Plus
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.5.5'
    //knife4j
    implementation("com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter:4.4.0")
    //hutool工具包
    implementation 'cn.hutool:hutool-all:5.8.16'
    // slf4j
    implementation 'org.slf4j:slf4j-api:2.0.9'
    //validation参数校验工具
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.1'
    // Sa-Token 权限认证，在线文档：https://sa-token.cc
    implementation 'cn.dev33:sa-token-spring-boot3-starter:1.37.0'
    // Sa-Token 整合 Redis （使用 jackson 序列化方式）
    implementation 'org.apache.commons:commons-pool2'
    // Sa-Token 整合 Redis （使用 jackson 序列化方式）
    implementation 'cn.dev33:sa-token-redis-jackson:1.37.0'



}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
